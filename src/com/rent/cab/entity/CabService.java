package com.rent.cab.entity;

// Generated Jan 11, 2014 12:15:42 PM by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

//import org.hibernate.annotations.Cascade;
//import org.hibernate.annotations.CascadeType;

/**
 * CabService generated by hbm2java
 */
@Entity
@Table(name = "cab_service", catalog = "rendacab")
public class CabService implements java.io.Serializable {

	private Long cabServiceId;
	private Users users;
	private Locations locationsByLocationIdDropoff;
	private Locations locationsByLocationIdPickup;
	private Cab cab;
	private Status status;

	public CabService() {
	}

	public CabService(Users users, Locations locationsByLocationIdDropoff,
			Locations locationsByLocationIdPickup, Cab cab, Status status) {
		this.users = users;
		this.locationsByLocationIdDropoff = locationsByLocationIdDropoff;
		this.locationsByLocationIdPickup = locationsByLocationIdPickup;
		this.cab = cab;
		this.status = status;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "cab_service_id", unique = true, nullable = false)
	public Long getCabServiceId() {
		return this.cabServiceId;
	}

	public void setCabServiceId(Long cabServiceId) {
		this.cabServiceId = cabServiceId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "location_id_dropoff", nullable = false)
	public Locations getLocationsByLocationIdDropoff() {
		return this.locationsByLocationIdDropoff;
	}

	public void setLocationsByLocationIdDropoff(
			Locations locationsByLocationIdDropoff) {
		this.locationsByLocationIdDropoff = locationsByLocationIdDropoff;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "location_id_pickup", nullable = false)
	public Locations getLocationsByLocationIdPickup() {
		return this.locationsByLocationIdPickup;
	}

	public void setLocationsByLocationIdPickup(
			Locations locationsByLocationIdPickup) {
		this.locationsByLocationIdPickup = locationsByLocationIdPickup;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cab_id", nullable = false)
	public Cab getCab() {
		return this.cab;
	}

	public void setCab(Cab cab) {
		this.cab = cab;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status", nullable = false)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

}
